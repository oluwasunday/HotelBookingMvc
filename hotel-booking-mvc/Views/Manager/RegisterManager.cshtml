@model ManagerRegistration
@{
    Layout = "~/Views/Shared/_RegisterManager.cshtml";
}

<div class="container py-4">
    <div class="row">
        <div class="col-lg-5 col-md-5 d-none d-sm-none d-sm-flex d-md-flex d-lg-flex m-0 p-0">
            <img src="~/images/Login.png" alt="login" class="img-fluid" />
        </div>
        <div class="col-sm-12 col-lg-7 mt-sm-4 ps-4">

            <div class="w-100 d-flex align-items-center justify-content-center mb-2">
                <h1 class="h3">Manager Registration</h1>
            </div>

            <form class="flow-vr card px-4 py-4" id="managerRegistration" asp-action="RegisterNewManager">
                @using (Html.BeginForm("RegisterNewManager", "Manager", FormMethod.Post, new { novalidate = "true", @class = "needs-validation" }))
                {
                    <nav>
                        <div class="nav nav-pills nav-fill" id="nav-tab" role="tablist">
                            <a class="nav-link active" id="step1-tab" data-bs-toggle="tab" href="#step1">Manager Details</a>
                            <a class="nav-link" id="step2-tab" data-bs-toggle="tab" href="#step2">Company Details</a>
                            <a class="nav-link" id="step3-tab" data-bs-toggle="tab" href="#step3">Hotel Details</a>
                        </div>
                    </nav>

                    <div class="tab-content">

                        <div class="tab-pane fade show active" id="step1">
                            <div class="step flow-vr">

                                <div class="form-group mb-2" style="border-style:none;">

                                    @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control has-validation", @placeholder = "First Name", @required = "required" })

                                    @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "badge bg-danger" })

                                    @if (ViewBag.error != null)
                                    {
                                        <span class="badge bg-danger">@ViewBag.error</span>
                                    }
                                </div>

                                <div class="form-group mb-2" style="border-style:none;">

                                    @Html.TextBoxFor(x => x.LastName, new { @class = "form-control has-validation", @placeholder = "Last Name", @required = "required" })

                                    @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "badge bg-danger" })

                                    @if (ViewBag.error != null)
                                    {
                                        <span class="badge bg-danger">@ViewBag.error</span>
                                    }
                                </div>

                                <div class="form-group mb-2" style="border-style:none;">

                                    @Html.TextBoxFor(x => x.Password, new { @class = "form-control has-validation", @placeholder = "Password", @required = "required" })

                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "badge bg-danger" })

                                    @if (ViewBag.error != null)
                                    {
                                        <span class="badge bg-danger">@ViewBag.error</span>
                                    }
                                </div>

                                <div class="form-group mb-2" style="border-style:none;">

                                    @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "form-control has-validation", @placeholder = "Phone Number", @required = "required" })

                                    @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "badge bg-danger" })

                                    @if (ViewBag.error != null)
                                    {
                                        <span class="badge bg-danger">@ViewBag.error</span>
                                    }
                                </div>


                                <div class="form-group mb-2" style="border-style:none;">

                                    @Html.TextBoxFor(x => x.Gender, new { @class = "form-control has-validation", @placeholder = "Gender", @required = "required" })

                                    @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "badge bg-danger" })

                                    @if (ViewBag.error != null)
                                    {
                                        <span class="badge bg-danger">@ViewBag.error</span>
                                    }
                                </div>

                                <div class="form-group mb-2" style="border-style:none;">

                                    @Html.TextBoxFor(x => x.State, new { @class = "form-control has-validation", @placeholder = "State", @required = "required" })

                                    @Html.ValidationMessageFor(m => m.State, "", new { @class = "badge bg-danger" })

                                    @if (ViewBag.error != null)
                                    {
                                        <span class="badge bg-danger">@ViewBag.error</span>
                                    }
                                </div>

                                <div class="form-group mb-2" style="border-style:none;">

                                    @Html.TextBoxFor(x => x.Age, new { @class = "form-control has-validation", @placeholder = "Age", @required = "required" })

                                    @Html.ValidationMessageFor(m => m.Age, "", new { @class = "badge bg-danger" })

                                    @if (ViewBag.error != null)
                                    {
                                        <span class="badge bg-danger">@ViewBag.error</span>
                                    }
                                </div>

                                <div class="form-group mb-2" style="border-style:none;">

                                    @Html.TextBoxFor(x => x.AccountName, new { @class = "form-control has-validation", @placeholder = "Account Name", @required = "required" })

                                    @Html.ValidationMessageFor(m => m.AccountName, "", new { @class = "badge bg-danger" })

                                    @if (ViewBag.error != null)
                                    {
                                        <span class="badge bg-danger">@ViewBag.error</span>
                                    }
                                </div>

                                <div class="form-group mb-2" style="border-style:none;">

                                    @Html.TextBoxFor(x => x.AccountNumber, new { @class = "form-control has-validation", @placeholder = "Account Number", @required = "required"})

                                    @Html.ValidationMessageFor(m => m.AccountNumber, "", new { @class = "badge bg-danger" })

                                    @if (ViewBag.error != null)
                                    {
                                        <span class="badge bg-danger">@ViewBag.error</span>
                                    }
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="step2">
                            <div class="step flow-vr">

                                <div class="form-group mb-2" style="border-style:none;">

                                    @Html.TextBoxFor(x => x.CompanyName, new { @class = "form-control has-validation", @placeholder = "Company Name", @required = "required"})

                                    @Html.ValidationMessageFor(m => m.CompanyName, "", new { @class = "badge bg-danger" })

                                    @if (ViewBag.error != null)
                                    {
                                        <span class="badge bg-danger">@ViewBag.error</span>
                                    }
                                </div>

                                <div class="form-group mb-2" style="border-style:none;">

                                    @Html.TextBoxFor(x => x.CompanyAddress, new { @class = "form-control has-validation", @placeholder = "Company Address", @required = "required"})

                                    @Html.ValidationMessageFor(m => m.CompanyAddress, "", new { @class = "badge bg-danger" })

                                    @if (ViewBag.error != null)
                                    {
                                        <span class="badge bg-danger">@ViewBag.error</span>
                                    }
                                </div>

                                <div class="form-group mb-2" style="border-style:none;">

                                    @Html.HiddenFor(x => x.BusinessEmail)

                                </div>

                                <div class="form-group mb-2" style="border-style:none;">

                                    @Html.TextBoxFor(x => x.BusinessPhone, new { @class = "form-control has-validation", @placeholder = "Business Phone", @required = "required"})

                                    @Html.ValidationMessageFor(m => m.BusinessPhone, "", new { @class = "badge bg-danger" })

                                    @if (ViewBag.error != null)
                                    {
                                        <span class="badge bg-danger">@ViewBag.error</span>
                                    }
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="step3">
                            <div class="step flow-vr">

                                <div class="form-group mb-2" style="border-style:none;">

                                    @Html.TextBoxFor(x => x.HotelName, new { @class = "form-control has-validation", @placeholder = "Hotel Name", @required = "required" })

                                    @Html.ValidationMessageFor(m => m.HotelName, "", new { @class = "badge bg-danger" })

                                    @if (ViewBag.error != null)
                                    {
                                        <span class="badge bg-danger">@ViewBag.error</span>
                                    }
                                </div>

                                <div class="form-group mb-2" style="border-style:none;">

                                    @Html.TextBoxFor(x => x.HotelDescription, new { @class = "form-control has-validation", @placeholder = "Hotel Description", @required = "required" })

                                    @Html.ValidationMessageFor(m => m.HotelDescription, "", new { @class = "badge bg-danger" })

                                    @if (ViewBag.error != null)
                                    {
                                        <span class="badge bg-danger">@ViewBag.error</span>
                                    }
                                </div>

                                <div class="form-group mb-2" style="border-style:none;">

                                    @Html.TextBoxFor(x => x.HotelEmail, new { @class = "form-control has-validation", @placeholder = "Hotel Email", @required = "required" })

                                    @Html.ValidationMessageFor(m => m.HotelEmail, "", new { @class = "badge bg-danger" })

                                    @if (ViewBag.error != null)
                                    {
                                        <span class="badge bg-danger">@ViewBag.error</span>
                                    }
                                </div>

                                <div class="form-group mb-2" style="border-style:none;">

                                    @Html.TextBoxFor(x => x.HotelPhone, new { @class = "form-control has-validation", @placeholder = "Hotel Phone", @required = "required" })

                                    @Html.ValidationMessageFor(m => m.HotelPhone, "", new { @class = "badge bg-danger" })

                                    @if (ViewBag.error != null)
                                    {
                                        <span class="badge bg-danger">@ViewBag.error</span>
                                    }
                                </div>

                                <div class="form-group mb-2" style="border-style:none;">

                                    @Html.TextBoxFor(x => x.HotelAddress, new { @class = "form-control has-validation", @placeholder = "Hotel Address", @required = "required" })

                                    @Html.ValidationMessageFor(m => m.HotelAddress, "", new { @class = "badge bg-danger" })

                                    @if (ViewBag.error != null)
                                    {
                                        <span class="badge bg-danger">@ViewBag.error</span>
                                    }
                                </div>

                                <div class="form-group mb-2" style="border-style:none;">

                                    @Html.TextBoxFor(x => x.HotelCity, new { @class = "form-control has-validation", @placeholder = "Hotel City", @required = "required" })

                                    @Html.ValidationMessageFor(m => m.HotelCity, "", new { @class = "badge bg-danger" })

                                    @if (ViewBag.error != null)
                                    {
                                        <span class="badge bg-danger">@ViewBag.error</span>
                                    }
                                </div>

                                <div class="form-group mb-2" style="border-style:none;">

                                    @Html.TextBoxFor(x => x.HotelState, new { @class = "form-control has-validation", @placeholder = "Hotel State", @required = "required" })

                                    @Html.ValidationMessageFor(m => m.HotelState, "", new { @class = "badge bg-danger" })

                                    @if (ViewBag.error != null)
                                    {
                                        <span class="badge bg-danger">@ViewBag.error</span>
                                    }
                                </div>

                                <div class="form-group mb-2" style="border-style:none;">

                                    @Html.HiddenFor( x => x.Token)

                                </div>

                            </div>
                        </div>
                    </div>


                    <div class="row justify-content-between">
                        <div class="col-auto"><button type="button" class="btn btn-secondary" data-enchanter="previous">Previous</button></div>
                        <div class="col-auto">
                            <button type="button" class="btn btn-primary" data-enchanter="next">Next</button>
                            <button type="submit" class="btn btn-primary" data-enchanter="finish">Finish</button>
                        </div>
                    </div>
                }
                </form>
        </div>
    </div>
</div>